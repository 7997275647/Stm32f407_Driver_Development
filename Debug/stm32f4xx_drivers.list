
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000800  08000188  08000188  00010188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000988  08000990  00010990  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000988  08000988  00010990  2**0
                  CONTENTS
  4 .ARM          00000000  08000988  08000988  00010990  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000988  08000990  00010990  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000988  08000988  00010988  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800098c  0800098c  0001098c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010990  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00010990  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00010990  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  000109c0  2**0
                  CONTENTS, READONLY
 14 .debug_info   000009e6  00000000  00000000  00010a03  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00000303  00000000  00000000  000113e9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 000000c0  00000000  00000000  000116f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 00000086  00000000  00000000  000117b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  000017eb  00000000  00000000  00011836  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00000f27  00000000  00000000  00013021  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    000054dc  00000000  00000000  00013f48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  0000024c  00000000  00000000  00019424  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000068  00000000  00000000  00019670  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000970 	.word	0x08000970

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	08000970 	.word	0x08000970

080001c8 <GPIO_ClockControl>:
 *
 * @return : none
 *
 * @Note:
 **********************************************************************************************************/
void GPIO_ClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi) {
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
 80001ce:	6078      	str	r0, [r7, #4]
 80001d0:	460b      	mov	r3, r1
 80001d2:	70fb      	strb	r3, [r7, #3]
	if (EnorDi == ENABLE) {
 80001d4:	78fb      	ldrb	r3, [r7, #3]
 80001d6:	2b01      	cmp	r3, #1
 80001d8:	d162      	bne.n	80002a0 <GPIO_ClockControl+0xd8>
		if (pGPIOx == GPIOA) {
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	4a64      	ldr	r2, [pc, #400]	; (8000370 <GPIO_ClockControl+0x1a8>)
 80001de:	4293      	cmp	r3, r2
 80001e0:	d106      	bne.n	80001f0 <GPIO_ClockControl+0x28>
			GPIOA_CLK_EN();
 80001e2:	4b64      	ldr	r3, [pc, #400]	; (8000374 <GPIO_ClockControl+0x1ac>)
 80001e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001e6:	4a63      	ldr	r2, [pc, #396]	; (8000374 <GPIO_ClockControl+0x1ac>)
 80001e8:	f043 0301 	orr.w	r3, r3, #1
 80001ec:	6313      	str	r3, [r2, #48]	; 0x30
			GPIOI_CLK_DI();
		}

	}

}
 80001ee:	e0b9      	b.n	8000364 <GPIO_ClockControl+0x19c>
		} else if (pGPIOx == GPIOB) {
 80001f0:	687b      	ldr	r3, [r7, #4]
 80001f2:	4a61      	ldr	r2, [pc, #388]	; (8000378 <GPIO_ClockControl+0x1b0>)
 80001f4:	4293      	cmp	r3, r2
 80001f6:	d106      	bne.n	8000206 <GPIO_ClockControl+0x3e>
			GPIOB_CLK_EN();
 80001f8:	4b5e      	ldr	r3, [pc, #376]	; (8000374 <GPIO_ClockControl+0x1ac>)
 80001fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001fc:	4a5d      	ldr	r2, [pc, #372]	; (8000374 <GPIO_ClockControl+0x1ac>)
 80001fe:	f043 0302 	orr.w	r3, r3, #2
 8000202:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000204:	e0ae      	b.n	8000364 <GPIO_ClockControl+0x19c>
		} else if (pGPIOx == GPIOC) {
 8000206:	687b      	ldr	r3, [r7, #4]
 8000208:	4a5c      	ldr	r2, [pc, #368]	; (800037c <GPIO_ClockControl+0x1b4>)
 800020a:	4293      	cmp	r3, r2
 800020c:	d106      	bne.n	800021c <GPIO_ClockControl+0x54>
			GPIOC_CLK_EN();
 800020e:	4b59      	ldr	r3, [pc, #356]	; (8000374 <GPIO_ClockControl+0x1ac>)
 8000210:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000212:	4a58      	ldr	r2, [pc, #352]	; (8000374 <GPIO_ClockControl+0x1ac>)
 8000214:	f043 0304 	orr.w	r3, r3, #4
 8000218:	6313      	str	r3, [r2, #48]	; 0x30
}
 800021a:	e0a3      	b.n	8000364 <GPIO_ClockControl+0x19c>
		} else if (pGPIOx == GPIOD) {
 800021c:	687b      	ldr	r3, [r7, #4]
 800021e:	4a58      	ldr	r2, [pc, #352]	; (8000380 <GPIO_ClockControl+0x1b8>)
 8000220:	4293      	cmp	r3, r2
 8000222:	d106      	bne.n	8000232 <GPIO_ClockControl+0x6a>
			GPIOD_CLK_EN();
 8000224:	4b53      	ldr	r3, [pc, #332]	; (8000374 <GPIO_ClockControl+0x1ac>)
 8000226:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000228:	4a52      	ldr	r2, [pc, #328]	; (8000374 <GPIO_ClockControl+0x1ac>)
 800022a:	f043 0308 	orr.w	r3, r3, #8
 800022e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000230:	e098      	b.n	8000364 <GPIO_ClockControl+0x19c>
		} else if (pGPIOx == GPIOE) {
 8000232:	687b      	ldr	r3, [r7, #4]
 8000234:	4a53      	ldr	r2, [pc, #332]	; (8000384 <GPIO_ClockControl+0x1bc>)
 8000236:	4293      	cmp	r3, r2
 8000238:	d106      	bne.n	8000248 <GPIO_ClockControl+0x80>
			GPIOE_CLK_EN();
 800023a:	4b4e      	ldr	r3, [pc, #312]	; (8000374 <GPIO_ClockControl+0x1ac>)
 800023c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800023e:	4a4d      	ldr	r2, [pc, #308]	; (8000374 <GPIO_ClockControl+0x1ac>)
 8000240:	f043 0310 	orr.w	r3, r3, #16
 8000244:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000246:	e08d      	b.n	8000364 <GPIO_ClockControl+0x19c>
		} else if (pGPIOx == GPIOF) {
 8000248:	687b      	ldr	r3, [r7, #4]
 800024a:	4a4f      	ldr	r2, [pc, #316]	; (8000388 <GPIO_ClockControl+0x1c0>)
 800024c:	4293      	cmp	r3, r2
 800024e:	d106      	bne.n	800025e <GPIO_ClockControl+0x96>
			GPIOF_CLK_EN();
 8000250:	4b48      	ldr	r3, [pc, #288]	; (8000374 <GPIO_ClockControl+0x1ac>)
 8000252:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000254:	4a47      	ldr	r2, [pc, #284]	; (8000374 <GPIO_ClockControl+0x1ac>)
 8000256:	f043 0320 	orr.w	r3, r3, #32
 800025a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800025c:	e082      	b.n	8000364 <GPIO_ClockControl+0x19c>
		} else if (pGPIOx == GPIOG) {
 800025e:	687b      	ldr	r3, [r7, #4]
 8000260:	4a4a      	ldr	r2, [pc, #296]	; (800038c <GPIO_ClockControl+0x1c4>)
 8000262:	4293      	cmp	r3, r2
 8000264:	d106      	bne.n	8000274 <GPIO_ClockControl+0xac>
			GPIOG_CLK_EN();
 8000266:	4b43      	ldr	r3, [pc, #268]	; (8000374 <GPIO_ClockControl+0x1ac>)
 8000268:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800026a:	4a42      	ldr	r2, [pc, #264]	; (8000374 <GPIO_ClockControl+0x1ac>)
 800026c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000270:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000272:	e077      	b.n	8000364 <GPIO_ClockControl+0x19c>
		} else if (pGPIOx == GPIOH) {
 8000274:	687b      	ldr	r3, [r7, #4]
 8000276:	4a46      	ldr	r2, [pc, #280]	; (8000390 <GPIO_ClockControl+0x1c8>)
 8000278:	4293      	cmp	r3, r2
 800027a:	d106      	bne.n	800028a <GPIO_ClockControl+0xc2>
			GPIOH_CLK_EN();
 800027c:	4b3d      	ldr	r3, [pc, #244]	; (8000374 <GPIO_ClockControl+0x1ac>)
 800027e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000280:	4a3c      	ldr	r2, [pc, #240]	; (8000374 <GPIO_ClockControl+0x1ac>)
 8000282:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000286:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000288:	e06c      	b.n	8000364 <GPIO_ClockControl+0x19c>
		} else if (pGPIOx == GPIOI) {
 800028a:	687b      	ldr	r3, [r7, #4]
 800028c:	4a41      	ldr	r2, [pc, #260]	; (8000394 <GPIO_ClockControl+0x1cc>)
 800028e:	4293      	cmp	r3, r2
 8000290:	d168      	bne.n	8000364 <GPIO_ClockControl+0x19c>
			GPIOI_CLK_EN();
 8000292:	4b38      	ldr	r3, [pc, #224]	; (8000374 <GPIO_ClockControl+0x1ac>)
 8000294:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000296:	4a37      	ldr	r2, [pc, #220]	; (8000374 <GPIO_ClockControl+0x1ac>)
 8000298:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800029c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800029e:	e061      	b.n	8000364 <GPIO_ClockControl+0x19c>
		if (pGPIOx == GPIOA) {
 80002a0:	687b      	ldr	r3, [r7, #4]
 80002a2:	4a33      	ldr	r2, [pc, #204]	; (8000370 <GPIO_ClockControl+0x1a8>)
 80002a4:	4293      	cmp	r3, r2
 80002a6:	d106      	bne.n	80002b6 <GPIO_ClockControl+0xee>
			GPIOA_CLK_DI();
 80002a8:	4b32      	ldr	r3, [pc, #200]	; (8000374 <GPIO_ClockControl+0x1ac>)
 80002aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ac:	4a31      	ldr	r2, [pc, #196]	; (8000374 <GPIO_ClockControl+0x1ac>)
 80002ae:	f023 0301 	bic.w	r3, r3, #1
 80002b2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002b4:	e056      	b.n	8000364 <GPIO_ClockControl+0x19c>
		} else if (pGPIOx == GPIOB) {
 80002b6:	687b      	ldr	r3, [r7, #4]
 80002b8:	4a2f      	ldr	r2, [pc, #188]	; (8000378 <GPIO_ClockControl+0x1b0>)
 80002ba:	4293      	cmp	r3, r2
 80002bc:	d106      	bne.n	80002cc <GPIO_ClockControl+0x104>
			GPIOB_CLK_DI();
 80002be:	4b2d      	ldr	r3, [pc, #180]	; (8000374 <GPIO_ClockControl+0x1ac>)
 80002c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002c2:	4a2c      	ldr	r2, [pc, #176]	; (8000374 <GPIO_ClockControl+0x1ac>)
 80002c4:	f023 0302 	bic.w	r3, r3, #2
 80002c8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ca:	e04b      	b.n	8000364 <GPIO_ClockControl+0x19c>
		} else if (pGPIOx == GPIOC) {
 80002cc:	687b      	ldr	r3, [r7, #4]
 80002ce:	4a2b      	ldr	r2, [pc, #172]	; (800037c <GPIO_ClockControl+0x1b4>)
 80002d0:	4293      	cmp	r3, r2
 80002d2:	d106      	bne.n	80002e2 <GPIO_ClockControl+0x11a>
			GPIOC_CLK_DI();
 80002d4:	4b27      	ldr	r3, [pc, #156]	; (8000374 <GPIO_ClockControl+0x1ac>)
 80002d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002d8:	4a26      	ldr	r2, [pc, #152]	; (8000374 <GPIO_ClockControl+0x1ac>)
 80002da:	f023 0304 	bic.w	r3, r3, #4
 80002de:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002e0:	e040      	b.n	8000364 <GPIO_ClockControl+0x19c>
		} else if (pGPIOx == GPIOD) {
 80002e2:	687b      	ldr	r3, [r7, #4]
 80002e4:	4a26      	ldr	r2, [pc, #152]	; (8000380 <GPIO_ClockControl+0x1b8>)
 80002e6:	4293      	cmp	r3, r2
 80002e8:	d106      	bne.n	80002f8 <GPIO_ClockControl+0x130>
			GPIOD_CLK_DI();
 80002ea:	4b22      	ldr	r3, [pc, #136]	; (8000374 <GPIO_ClockControl+0x1ac>)
 80002ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ee:	4a21      	ldr	r2, [pc, #132]	; (8000374 <GPIO_ClockControl+0x1ac>)
 80002f0:	f023 0308 	bic.w	r3, r3, #8
 80002f4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002f6:	e035      	b.n	8000364 <GPIO_ClockControl+0x19c>
		} else if (pGPIOx == GPIOE) {
 80002f8:	687b      	ldr	r3, [r7, #4]
 80002fa:	4a22      	ldr	r2, [pc, #136]	; (8000384 <GPIO_ClockControl+0x1bc>)
 80002fc:	4293      	cmp	r3, r2
 80002fe:	d106      	bne.n	800030e <GPIO_ClockControl+0x146>
			GPIOE_CLK_DI();
 8000300:	4b1c      	ldr	r3, [pc, #112]	; (8000374 <GPIO_ClockControl+0x1ac>)
 8000302:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000304:	4a1b      	ldr	r2, [pc, #108]	; (8000374 <GPIO_ClockControl+0x1ac>)
 8000306:	f023 0310 	bic.w	r3, r3, #16
 800030a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800030c:	e02a      	b.n	8000364 <GPIO_ClockControl+0x19c>
		} else if (pGPIOx == GPIOF) {
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	4a1d      	ldr	r2, [pc, #116]	; (8000388 <GPIO_ClockControl+0x1c0>)
 8000312:	4293      	cmp	r3, r2
 8000314:	d106      	bne.n	8000324 <GPIO_ClockControl+0x15c>
			GPIOF_CLK_DI();
 8000316:	4b17      	ldr	r3, [pc, #92]	; (8000374 <GPIO_ClockControl+0x1ac>)
 8000318:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800031a:	4a16      	ldr	r2, [pc, #88]	; (8000374 <GPIO_ClockControl+0x1ac>)
 800031c:	f023 0320 	bic.w	r3, r3, #32
 8000320:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000322:	e01f      	b.n	8000364 <GPIO_ClockControl+0x19c>
		} else if (pGPIOx == GPIOG) {
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	4a19      	ldr	r2, [pc, #100]	; (800038c <GPIO_ClockControl+0x1c4>)
 8000328:	4293      	cmp	r3, r2
 800032a:	d106      	bne.n	800033a <GPIO_ClockControl+0x172>
			GPIOG_CLK_DI();
 800032c:	4b11      	ldr	r3, [pc, #68]	; (8000374 <GPIO_ClockControl+0x1ac>)
 800032e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000330:	4a10      	ldr	r2, [pc, #64]	; (8000374 <GPIO_ClockControl+0x1ac>)
 8000332:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000336:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000338:	e014      	b.n	8000364 <GPIO_ClockControl+0x19c>
		} else if (pGPIOx == GPIOH) {
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	4a14      	ldr	r2, [pc, #80]	; (8000390 <GPIO_ClockControl+0x1c8>)
 800033e:	4293      	cmp	r3, r2
 8000340:	d106      	bne.n	8000350 <GPIO_ClockControl+0x188>
			GPIOH_CLK_DI();
 8000342:	4b0c      	ldr	r3, [pc, #48]	; (8000374 <GPIO_ClockControl+0x1ac>)
 8000344:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000346:	4a0b      	ldr	r2, [pc, #44]	; (8000374 <GPIO_ClockControl+0x1ac>)
 8000348:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800034c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800034e:	e009      	b.n	8000364 <GPIO_ClockControl+0x19c>
		} else if (pGPIOx == GPIOI) {
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	4a10      	ldr	r2, [pc, #64]	; (8000394 <GPIO_ClockControl+0x1cc>)
 8000354:	4293      	cmp	r3, r2
 8000356:	d105      	bne.n	8000364 <GPIO_ClockControl+0x19c>
			GPIOI_CLK_DI();
 8000358:	4b06      	ldr	r3, [pc, #24]	; (8000374 <GPIO_ClockControl+0x1ac>)
 800035a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800035c:	4a05      	ldr	r2, [pc, #20]	; (8000374 <GPIO_ClockControl+0x1ac>)
 800035e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000362:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000364:	bf00      	nop
 8000366:	370c      	adds	r7, #12
 8000368:	46bd      	mov	sp, r7
 800036a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800036e:	4770      	bx	lr
 8000370:	40020000 	.word	0x40020000
 8000374:	40023800 	.word	0x40023800
 8000378:	40020400 	.word	0x40020400
 800037c:	40020800 	.word	0x40020800
 8000380:	40020c00 	.word	0x40020c00
 8000384:	40021000 	.word	0x40021000
 8000388:	40021400 	.word	0x40021400
 800038c:	40021800 	.word	0x40021800
 8000390:	40021c00 	.word	0x40021c00
 8000394:	40022000 	.word	0x40022000

08000398 <GPIO_Init>:
 *
 * @return :
 *
 * @Note:
 **********************************************************************************************************/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle) {
 8000398:	b480      	push	{r7}
 800039a:	b085      	sub	sp, #20
 800039c:	af00      	add	r7, sp, #0
 800039e:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 80003a0:	2300      	movs	r3, #0
 80003a2:	60fb      	str	r3, [r7, #12]

	// configure mode
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG) {
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	795b      	ldrb	r3, [r3, #5]
 80003a8:	2b03      	cmp	r3, #3
 80003aa:	d820      	bhi.n	80003ee <GPIO_Init+0x56>
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode
 80003ac:	687b      	ldr	r3, [r7, #4]
 80003ae:	795b      	ldrb	r3, [r3, #5]
 80003b0:	461a      	mov	r2, r3
				<< (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	791b      	ldrb	r3, [r3, #4]
 80003b6:	005b      	lsls	r3, r3, #1
 80003b8:	fa02 f303 	lsl.w	r3, r2, r3
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode
 80003bc:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~(3<<(2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));  // clearing the bit positions
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	681b      	ldr	r3, [r3, #0]
 80003c2:	681a      	ldr	r2, [r3, #0]
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	791b      	ldrb	r3, [r3, #4]
 80003c8:	005b      	lsls	r3, r3, #1
 80003ca:	2103      	movs	r1, #3
 80003cc:	fa01 f303 	lsl.w	r3, r1, r3
 80003d0:	43db      	mvns	r3, r3
 80003d2:	4619      	mov	r1, r3
 80003d4:	687b      	ldr	r3, [r7, #4]
 80003d6:	681b      	ldr	r3, [r3, #0]
 80003d8:	400a      	ands	r2, r1
 80003da:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER = pGPIOHandle->pGPIOx->MODER | temp;  //setting bit positions according to the pin mode
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	681b      	ldr	r3, [r3, #0]
 80003e0:	6819      	ldr	r1, [r3, #0]
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	681b      	ldr	r3, [r3, #0]
 80003e6:	68fa      	ldr	r2, [r7, #12]
 80003e8:	430a      	orrs	r2, r1
 80003ea:	601a      	str	r2, [r3, #0]
 80003ec:	e14b      	b.n	8000686 <GPIO_Init+0x2ee>

	} else {
		if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT){
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	795b      	ldrb	r3, [r3, #5]
 80003f2:	2b04      	cmp	r3, #4
 80003f4:	d117      	bne.n	8000426 <GPIO_Init+0x8e>
			//1. Configure FTSR
			EXTI->FTSR |= (1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);    //SET FTSR FOR GIVEN PIN
 80003f6:	4b88      	ldr	r3, [pc, #544]	; (8000618 <GPIO_Init+0x280>)
 80003f8:	68db      	ldr	r3, [r3, #12]
 80003fa:	687a      	ldr	r2, [r7, #4]
 80003fc:	7912      	ldrb	r2, [r2, #4]
 80003fe:	4611      	mov	r1, r2
 8000400:	2201      	movs	r2, #1
 8000402:	408a      	lsls	r2, r1
 8000404:	4611      	mov	r1, r2
 8000406:	4a84      	ldr	r2, [pc, #528]	; (8000618 <GPIO_Init+0x280>)
 8000408:	430b      	orrs	r3, r1
 800040a:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR &= ~(1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);   // CLEAR RTSR
 800040c:	4b82      	ldr	r3, [pc, #520]	; (8000618 <GPIO_Init+0x280>)
 800040e:	689b      	ldr	r3, [r3, #8]
 8000410:	687a      	ldr	r2, [r7, #4]
 8000412:	7912      	ldrb	r2, [r2, #4]
 8000414:	4611      	mov	r1, r2
 8000416:	2201      	movs	r2, #1
 8000418:	408a      	lsls	r2, r1
 800041a:	43d2      	mvns	r2, r2
 800041c:	4611      	mov	r1, r2
 800041e:	4a7e      	ldr	r2, [pc, #504]	; (8000618 <GPIO_Init+0x280>)
 8000420:	400b      	ands	r3, r1
 8000422:	6093      	str	r3, [r2, #8]
 8000424:	e035      	b.n	8000492 <GPIO_Init+0xfa>
		}
		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	795b      	ldrb	r3, [r3, #5]
 800042a:	2b05      	cmp	r3, #5
 800042c:	d117      	bne.n	800045e <GPIO_Init+0xc6>
			//1. Configure RTSR
			EXTI->RTSR |= (1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);    //SET RTSR
 800042e:	4b7a      	ldr	r3, [pc, #488]	; (8000618 <GPIO_Init+0x280>)
 8000430:	689b      	ldr	r3, [r3, #8]
 8000432:	687a      	ldr	r2, [r7, #4]
 8000434:	7912      	ldrb	r2, [r2, #4]
 8000436:	4611      	mov	r1, r2
 8000438:	2201      	movs	r2, #1
 800043a:	408a      	lsls	r2, r1
 800043c:	4611      	mov	r1, r2
 800043e:	4a76      	ldr	r2, [pc, #472]	; (8000618 <GPIO_Init+0x280>)
 8000440:	430b      	orrs	r3, r1
 8000442:	6093      	str	r3, [r2, #8]
			EXTI->FTSR &= ~(1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);    // CLEAR FTSR
 8000444:	4b74      	ldr	r3, [pc, #464]	; (8000618 <GPIO_Init+0x280>)
 8000446:	68db      	ldr	r3, [r3, #12]
 8000448:	687a      	ldr	r2, [r7, #4]
 800044a:	7912      	ldrb	r2, [r2, #4]
 800044c:	4611      	mov	r1, r2
 800044e:	2201      	movs	r2, #1
 8000450:	408a      	lsls	r2, r1
 8000452:	43d2      	mvns	r2, r2
 8000454:	4611      	mov	r1, r2
 8000456:	4a70      	ldr	r2, [pc, #448]	; (8000618 <GPIO_Init+0x280>)
 8000458:	400b      	ands	r3, r1
 800045a:	60d3      	str	r3, [r2, #12]
 800045c:	e019      	b.n	8000492 <GPIO_Init+0xfa>
		}
		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 800045e:	687b      	ldr	r3, [r7, #4]
 8000460:	795b      	ldrb	r3, [r3, #5]
 8000462:	2b05      	cmp	r3, #5
 8000464:	d115      	bne.n	8000492 <GPIO_Init+0xfa>
			//1. Configure RTSR and FTSR
			EXTI->FTSR |= (1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);  // SET BOTH RTSR AND FTSR
 8000466:	4b6c      	ldr	r3, [pc, #432]	; (8000618 <GPIO_Init+0x280>)
 8000468:	68db      	ldr	r3, [r3, #12]
 800046a:	687a      	ldr	r2, [r7, #4]
 800046c:	7912      	ldrb	r2, [r2, #4]
 800046e:	4611      	mov	r1, r2
 8000470:	2201      	movs	r2, #1
 8000472:	408a      	lsls	r2, r1
 8000474:	4611      	mov	r1, r2
 8000476:	4a68      	ldr	r2, [pc, #416]	; (8000618 <GPIO_Init+0x280>)
 8000478:	430b      	orrs	r3, r1
 800047a:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800047c:	4b66      	ldr	r3, [pc, #408]	; (8000618 <GPIO_Init+0x280>)
 800047e:	689b      	ldr	r3, [r3, #8]
 8000480:	687a      	ldr	r2, [r7, #4]
 8000482:	7912      	ldrb	r2, [r2, #4]
 8000484:	4611      	mov	r1, r2
 8000486:	2201      	movs	r2, #1
 8000488:	408a      	lsls	r2, r1
 800048a:	4611      	mov	r1, r2
 800048c:	4a62      	ldr	r2, [pc, #392]	; (8000618 <GPIO_Init+0x280>)
 800048e:	430b      	orrs	r3, r1
 8000490:	6093      	str	r3, [r2, #8]
		}

		// 2. Configure the gpio port selection using SYSCFG_EXTICR
		uint8_t temp1,temp2 =0;
 8000492:	2300      	movs	r3, #0
 8000494:	72fb      	strb	r3, [r7, #11]
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/4;
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	791b      	ldrb	r3, [r3, #4]
 800049a:	089b      	lsrs	r3, r3, #2
 800049c:	72bb      	strb	r3, [r7, #10]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%4;
 800049e:	687b      	ldr	r3, [r7, #4]
 80004a0:	791b      	ldrb	r3, [r3, #4]
 80004a2:	f003 0303 	and.w	r3, r3, #3
 80004a6:	72fb      	strb	r3, [r7, #11]
		SYSCFG_CLK_EN();
 80004a8:	4b5c      	ldr	r3, [pc, #368]	; (800061c <GPIO_Init+0x284>)
 80004aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80004ac:	4a5b      	ldr	r2, [pc, #364]	; (800061c <GPIO_Init+0x284>)
 80004ae:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80004b2:	6453      	str	r3, [r2, #68]	; 0x44
		if (pGPIOHandle->pGPIOx == GPIOA) {
 80004b4:	687b      	ldr	r3, [r7, #4]
 80004b6:	681b      	ldr	r3, [r3, #0]
 80004b8:	4a59      	ldr	r2, [pc, #356]	; (8000620 <GPIO_Init+0x288>)
 80004ba:	4293      	cmp	r3, r2
 80004bc:	d10a      	bne.n	80004d4 <GPIO_Init+0x13c>
			SYSCFG->EXTICR[temp1] |= (0x00<<(temp2*4));
 80004be:	4859      	ldr	r0, [pc, #356]	; (8000624 <GPIO_Init+0x28c>)
 80004c0:	7aba      	ldrb	r2, [r7, #10]
 80004c2:	4958      	ldr	r1, [pc, #352]	; (8000624 <GPIO_Init+0x28c>)
 80004c4:	7abb      	ldrb	r3, [r7, #10]
 80004c6:	3202      	adds	r2, #2
 80004c8:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 80004cc:	3302      	adds	r3, #2
 80004ce:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80004d2:	e0cd      	b.n	8000670 <GPIO_Init+0x2d8>
		} else if (pGPIOHandle->pGPIOx == GPIOB) {
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	681b      	ldr	r3, [r3, #0]
 80004d8:	4a53      	ldr	r2, [pc, #332]	; (8000628 <GPIO_Init+0x290>)
 80004da:	4293      	cmp	r3, r2
 80004dc:	d111      	bne.n	8000502 <GPIO_Init+0x16a>
			SYSCFG->EXTICR[temp1] |= (0x01<<(temp2*4));
 80004de:	4a51      	ldr	r2, [pc, #324]	; (8000624 <GPIO_Init+0x28c>)
 80004e0:	7abb      	ldrb	r3, [r7, #10]
 80004e2:	3302      	adds	r3, #2
 80004e4:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80004e8:	7afb      	ldrb	r3, [r7, #11]
 80004ea:	009b      	lsls	r3, r3, #2
 80004ec:	2101      	movs	r1, #1
 80004ee:	fa01 f303 	lsl.w	r3, r1, r3
 80004f2:	4618      	mov	r0, r3
 80004f4:	494b      	ldr	r1, [pc, #300]	; (8000624 <GPIO_Init+0x28c>)
 80004f6:	7abb      	ldrb	r3, [r7, #10]
 80004f8:	4302      	orrs	r2, r0
 80004fa:	3302      	adds	r3, #2
 80004fc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000500:	e0b6      	b.n	8000670 <GPIO_Init+0x2d8>
		} else if (pGPIOHandle->pGPIOx == GPIOC) {
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	681b      	ldr	r3, [r3, #0]
 8000506:	4a49      	ldr	r2, [pc, #292]	; (800062c <GPIO_Init+0x294>)
 8000508:	4293      	cmp	r3, r2
 800050a:	d111      	bne.n	8000530 <GPIO_Init+0x198>
			SYSCFG->EXTICR[temp1] |= (0x02<<(temp2*4));
 800050c:	4a45      	ldr	r2, [pc, #276]	; (8000624 <GPIO_Init+0x28c>)
 800050e:	7abb      	ldrb	r3, [r7, #10]
 8000510:	3302      	adds	r3, #2
 8000512:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000516:	7afb      	ldrb	r3, [r7, #11]
 8000518:	009b      	lsls	r3, r3, #2
 800051a:	2102      	movs	r1, #2
 800051c:	fa01 f303 	lsl.w	r3, r1, r3
 8000520:	4618      	mov	r0, r3
 8000522:	4940      	ldr	r1, [pc, #256]	; (8000624 <GPIO_Init+0x28c>)
 8000524:	7abb      	ldrb	r3, [r7, #10]
 8000526:	4302      	orrs	r2, r0
 8000528:	3302      	adds	r3, #2
 800052a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800052e:	e09f      	b.n	8000670 <GPIO_Init+0x2d8>
		} else if (pGPIOHandle->pGPIOx == GPIOD) {
 8000530:	687b      	ldr	r3, [r7, #4]
 8000532:	681b      	ldr	r3, [r3, #0]
 8000534:	4a3e      	ldr	r2, [pc, #248]	; (8000630 <GPIO_Init+0x298>)
 8000536:	4293      	cmp	r3, r2
 8000538:	d111      	bne.n	800055e <GPIO_Init+0x1c6>
			SYSCFG->EXTICR[temp1] |= (0x03<<(temp2*4));
 800053a:	4a3a      	ldr	r2, [pc, #232]	; (8000624 <GPIO_Init+0x28c>)
 800053c:	7abb      	ldrb	r3, [r7, #10]
 800053e:	3302      	adds	r3, #2
 8000540:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000544:	7afb      	ldrb	r3, [r7, #11]
 8000546:	009b      	lsls	r3, r3, #2
 8000548:	2103      	movs	r1, #3
 800054a:	fa01 f303 	lsl.w	r3, r1, r3
 800054e:	4618      	mov	r0, r3
 8000550:	4934      	ldr	r1, [pc, #208]	; (8000624 <GPIO_Init+0x28c>)
 8000552:	7abb      	ldrb	r3, [r7, #10]
 8000554:	4302      	orrs	r2, r0
 8000556:	3302      	adds	r3, #2
 8000558:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800055c:	e088      	b.n	8000670 <GPIO_Init+0x2d8>
		} else if (pGPIOHandle->pGPIOx == GPIOE) {
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	681b      	ldr	r3, [r3, #0]
 8000562:	4a34      	ldr	r2, [pc, #208]	; (8000634 <GPIO_Init+0x29c>)
 8000564:	4293      	cmp	r3, r2
 8000566:	d111      	bne.n	800058c <GPIO_Init+0x1f4>
			SYSCFG->EXTICR[temp1] |= (0x04<<(temp2*4));
 8000568:	4a2e      	ldr	r2, [pc, #184]	; (8000624 <GPIO_Init+0x28c>)
 800056a:	7abb      	ldrb	r3, [r7, #10]
 800056c:	3302      	adds	r3, #2
 800056e:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000572:	7afb      	ldrb	r3, [r7, #11]
 8000574:	009b      	lsls	r3, r3, #2
 8000576:	2104      	movs	r1, #4
 8000578:	fa01 f303 	lsl.w	r3, r1, r3
 800057c:	4618      	mov	r0, r3
 800057e:	4929      	ldr	r1, [pc, #164]	; (8000624 <GPIO_Init+0x28c>)
 8000580:	7abb      	ldrb	r3, [r7, #10]
 8000582:	4302      	orrs	r2, r0
 8000584:	3302      	adds	r3, #2
 8000586:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800058a:	e071      	b.n	8000670 <GPIO_Init+0x2d8>
		} else if (pGPIOHandle->pGPIOx == GPIOF) {
 800058c:	687b      	ldr	r3, [r7, #4]
 800058e:	681b      	ldr	r3, [r3, #0]
 8000590:	4a29      	ldr	r2, [pc, #164]	; (8000638 <GPIO_Init+0x2a0>)
 8000592:	4293      	cmp	r3, r2
 8000594:	d111      	bne.n	80005ba <GPIO_Init+0x222>
			SYSCFG->EXTICR[temp1] |= (0x05<<(temp2*4));
 8000596:	4a23      	ldr	r2, [pc, #140]	; (8000624 <GPIO_Init+0x28c>)
 8000598:	7abb      	ldrb	r3, [r7, #10]
 800059a:	3302      	adds	r3, #2
 800059c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80005a0:	7afb      	ldrb	r3, [r7, #11]
 80005a2:	009b      	lsls	r3, r3, #2
 80005a4:	2105      	movs	r1, #5
 80005a6:	fa01 f303 	lsl.w	r3, r1, r3
 80005aa:	4618      	mov	r0, r3
 80005ac:	491d      	ldr	r1, [pc, #116]	; (8000624 <GPIO_Init+0x28c>)
 80005ae:	7abb      	ldrb	r3, [r7, #10]
 80005b0:	4302      	orrs	r2, r0
 80005b2:	3302      	adds	r3, #2
 80005b4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80005b8:	e05a      	b.n	8000670 <GPIO_Init+0x2d8>
		} else if (pGPIOHandle->pGPIOx == GPIOG) {
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	681b      	ldr	r3, [r3, #0]
 80005be:	4a1f      	ldr	r2, [pc, #124]	; (800063c <GPIO_Init+0x2a4>)
 80005c0:	4293      	cmp	r3, r2
 80005c2:	d111      	bne.n	80005e8 <GPIO_Init+0x250>
			SYSCFG->EXTICR[temp1] |= (0x06<<(temp2*4));
 80005c4:	4a17      	ldr	r2, [pc, #92]	; (8000624 <GPIO_Init+0x28c>)
 80005c6:	7abb      	ldrb	r3, [r7, #10]
 80005c8:	3302      	adds	r3, #2
 80005ca:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80005ce:	7afb      	ldrb	r3, [r7, #11]
 80005d0:	009b      	lsls	r3, r3, #2
 80005d2:	2106      	movs	r1, #6
 80005d4:	fa01 f303 	lsl.w	r3, r1, r3
 80005d8:	4618      	mov	r0, r3
 80005da:	4912      	ldr	r1, [pc, #72]	; (8000624 <GPIO_Init+0x28c>)
 80005dc:	7abb      	ldrb	r3, [r7, #10]
 80005de:	4302      	orrs	r2, r0
 80005e0:	3302      	adds	r3, #2
 80005e2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80005e6:	e043      	b.n	8000670 <GPIO_Init+0x2d8>
		} else if (pGPIOHandle->pGPIOx == GPIOH) {
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	681b      	ldr	r3, [r3, #0]
 80005ec:	4a14      	ldr	r2, [pc, #80]	; (8000640 <GPIO_Init+0x2a8>)
 80005ee:	4293      	cmp	r3, r2
 80005f0:	d128      	bne.n	8000644 <GPIO_Init+0x2ac>
			SYSCFG->EXTICR[temp1] |= (0x07<<(temp2*4));
 80005f2:	4a0c      	ldr	r2, [pc, #48]	; (8000624 <GPIO_Init+0x28c>)
 80005f4:	7abb      	ldrb	r3, [r7, #10]
 80005f6:	3302      	adds	r3, #2
 80005f8:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80005fc:	7afb      	ldrb	r3, [r7, #11]
 80005fe:	009b      	lsls	r3, r3, #2
 8000600:	2107      	movs	r1, #7
 8000602:	fa01 f303 	lsl.w	r3, r1, r3
 8000606:	4618      	mov	r0, r3
 8000608:	4906      	ldr	r1, [pc, #24]	; (8000624 <GPIO_Init+0x28c>)
 800060a:	7abb      	ldrb	r3, [r7, #10]
 800060c:	4302      	orrs	r2, r0
 800060e:	3302      	adds	r3, #2
 8000610:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000614:	e02c      	b.n	8000670 <GPIO_Init+0x2d8>
 8000616:	bf00      	nop
 8000618:	40013c00 	.word	0x40013c00
 800061c:	40023800 	.word	0x40023800
 8000620:	40020000 	.word	0x40020000
 8000624:	40013800 	.word	0x40013800
 8000628:	40020400 	.word	0x40020400
 800062c:	40020800 	.word	0x40020800
 8000630:	40020c00 	.word	0x40020c00
 8000634:	40021000 	.word	0x40021000
 8000638:	40021400 	.word	0x40021400
 800063c:	40021800 	.word	0x40021800
 8000640:	40021c00 	.word	0x40021c00
		} else if (pGPIOHandle->pGPIOx == GPIOI) {
 8000644:	687b      	ldr	r3, [r7, #4]
 8000646:	681b      	ldr	r3, [r3, #0]
 8000648:	4a61      	ldr	r2, [pc, #388]	; (80007d0 <GPIO_Init+0x438>)
 800064a:	4293      	cmp	r3, r2
 800064c:	d110      	bne.n	8000670 <GPIO_Init+0x2d8>
			SYSCFG->EXTICR[temp1] |= (0x08<<(temp2*4));
 800064e:	4a61      	ldr	r2, [pc, #388]	; (80007d4 <GPIO_Init+0x43c>)
 8000650:	7abb      	ldrb	r3, [r7, #10]
 8000652:	3302      	adds	r3, #2
 8000654:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000658:	7afb      	ldrb	r3, [r7, #11]
 800065a:	009b      	lsls	r3, r3, #2
 800065c:	2108      	movs	r1, #8
 800065e:	fa01 f303 	lsl.w	r3, r1, r3
 8000662:	4618      	mov	r0, r3
 8000664:	495b      	ldr	r1, [pc, #364]	; (80007d4 <GPIO_Init+0x43c>)
 8000666:	7abb      	ldrb	r3, [r7, #10]
 8000668:	4302      	orrs	r2, r0
 800066a:	3302      	adds	r3, #2
 800066c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		}

		// 3. enable interrupt delivery using IMR
		EXTI->IMR |= (1<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000670:	4b59      	ldr	r3, [pc, #356]	; (80007d8 <GPIO_Init+0x440>)
 8000672:	681b      	ldr	r3, [r3, #0]
 8000674:	687a      	ldr	r2, [r7, #4]
 8000676:	7912      	ldrb	r2, [r2, #4]
 8000678:	4611      	mov	r1, r2
 800067a:	2201      	movs	r2, #1
 800067c:	408a      	lsls	r2, r1
 800067e:	4611      	mov	r1, r2
 8000680:	4a55      	ldr	r2, [pc, #340]	; (80007d8 <GPIO_Init+0x440>)
 8000682:	430b      	orrs	r3, r1
 8000684:	6013      	str	r3, [r2, #0]

	}

	//configure speed
	temp = 0;
 8000686:	2300      	movs	r3, #0
 8000688:	60fb      	str	r3, [r7, #12]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed
 800068a:	687b      	ldr	r3, [r7, #4]
 800068c:	799b      	ldrb	r3, [r3, #6]
 800068e:	461a      	mov	r2, r3
			<< (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000690:	687b      	ldr	r3, [r7, #4]
 8000692:	791b      	ldrb	r3, [r3, #4]
 8000694:	005b      	lsls	r3, r3, #1
 8000696:	fa02 f303 	lsl.w	r3, r2, r3
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed
 800069a:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(3<<(2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));  // clearing the bit positions
 800069c:	687b      	ldr	r3, [r7, #4]
 800069e:	681b      	ldr	r3, [r3, #0]
 80006a0:	689a      	ldr	r2, [r3, #8]
 80006a2:	687b      	ldr	r3, [r7, #4]
 80006a4:	791b      	ldrb	r3, [r3, #4]
 80006a6:	005b      	lsls	r3, r3, #1
 80006a8:	2103      	movs	r1, #3
 80006aa:	fa01 f303 	lsl.w	r3, r1, r3
 80006ae:	43db      	mvns	r3, r3
 80006b0:	4619      	mov	r1, r3
 80006b2:	687b      	ldr	r3, [r7, #4]
 80006b4:	681b      	ldr	r3, [r3, #0]
 80006b6:	400a      	ands	r2, r1
 80006b8:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR = pGPIOHandle->pGPIOx->OSPEEDR | temp;                     //setting bit positions according to the pin speed
 80006ba:	687b      	ldr	r3, [r7, #4]
 80006bc:	681b      	ldr	r3, [r3, #0]
 80006be:	6899      	ldr	r1, [r3, #8]
 80006c0:	687b      	ldr	r3, [r7, #4]
 80006c2:	681b      	ldr	r3, [r3, #0]
 80006c4:	68fa      	ldr	r2, [r7, #12]
 80006c6:	430a      	orrs	r2, r1
 80006c8:	609a      	str	r2, [r3, #8]
	temp = 0;
 80006ca:	2300      	movs	r3, #0
 80006cc:	60fb      	str	r3, [r7, #12]

	//configure pupd

	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl
 80006ce:	687b      	ldr	r3, [r7, #4]
 80006d0:	79db      	ldrb	r3, [r3, #7]
 80006d2:	461a      	mov	r2, r3
			<< (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006d4:	687b      	ldr	r3, [r7, #4]
 80006d6:	791b      	ldrb	r3, [r3, #4]
 80006d8:	005b      	lsls	r3, r3, #1
 80006da:	fa02 f303 	lsl.w	r3, r2, r3
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl
 80006de:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~(3<<(2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));  // clearing the bit positions
 80006e0:	687b      	ldr	r3, [r7, #4]
 80006e2:	681b      	ldr	r3, [r3, #0]
 80006e4:	68da      	ldr	r2, [r3, #12]
 80006e6:	687b      	ldr	r3, [r7, #4]
 80006e8:	791b      	ldrb	r3, [r3, #4]
 80006ea:	005b      	lsls	r3, r3, #1
 80006ec:	2103      	movs	r1, #3
 80006ee:	fa01 f303 	lsl.w	r3, r1, r3
 80006f2:	43db      	mvns	r3, r3
 80006f4:	4619      	mov	r1, r3
 80006f6:	687b      	ldr	r3, [r7, #4]
 80006f8:	681b      	ldr	r3, [r3, #0]
 80006fa:	400a      	ands	r2, r1
 80006fc:	60da      	str	r2, [r3, #12]

	pGPIOHandle->pGPIOx->PUPDR = pGPIOHandle->pGPIOx->PUPDR | temp;
 80006fe:	687b      	ldr	r3, [r7, #4]
 8000700:	681b      	ldr	r3, [r3, #0]
 8000702:	68d9      	ldr	r1, [r3, #12]
 8000704:	687b      	ldr	r3, [r7, #4]
 8000706:	681b      	ldr	r3, [r3, #0]
 8000708:	68fa      	ldr	r2, [r7, #12]
 800070a:	430a      	orrs	r2, r1
 800070c:	60da      	str	r2, [r3, #12]

	//configure otype
	temp = 0;
 800070e:	2300      	movs	r3, #0
 8000710:	60fb      	str	r3, [r7, #12]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOType
 8000712:	687b      	ldr	r3, [r7, #4]
 8000714:	7a1b      	ldrb	r3, [r3, #8]
 8000716:	461a      	mov	r2, r3
			<< (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000718:	687b      	ldr	r3, [r7, #4]
 800071a:	791b      	ldrb	r3, [r3, #4]
 800071c:	fa02 f303 	lsl.w	r3, r2, r3
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOType
 8000720:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~(1<<(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));  // clearing the bit positions
 8000722:	687b      	ldr	r3, [r7, #4]
 8000724:	681b      	ldr	r3, [r3, #0]
 8000726:	685a      	ldr	r2, [r3, #4]
 8000728:	687b      	ldr	r3, [r7, #4]
 800072a:	791b      	ldrb	r3, [r3, #4]
 800072c:	4619      	mov	r1, r3
 800072e:	2301      	movs	r3, #1
 8000730:	408b      	lsls	r3, r1
 8000732:	43db      	mvns	r3, r3
 8000734:	4619      	mov	r1, r3
 8000736:	687b      	ldr	r3, [r7, #4]
 8000738:	681b      	ldr	r3, [r3, #0]
 800073a:	400a      	ands	r2, r1
 800073c:	605a      	str	r2, [r3, #4]

	pGPIOHandle->pGPIOx->OTYPER = pGPIOHandle->pGPIOx->OTYPER | temp;
 800073e:	687b      	ldr	r3, [r7, #4]
 8000740:	681b      	ldr	r3, [r3, #0]
 8000742:	6859      	ldr	r1, [r3, #4]
 8000744:	687b      	ldr	r3, [r7, #4]
 8000746:	681b      	ldr	r3, [r3, #0]
 8000748:	68fa      	ldr	r2, [r7, #12]
 800074a:	430a      	orrs	r2, r1
 800074c:	605a      	str	r2, [r3, #4]
	temp = 0;
 800074e:	2300      	movs	r3, #0
 8000750:	60fb      	str	r3, [r7, #12]

	//configure alt functonality
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN) {
 8000752:	687b      	ldr	r3, [r7, #4]
 8000754:	795b      	ldrb	r3, [r3, #5]
 8000756:	2b02      	cmp	r3, #2
 8000758:	d133      	bne.n	80007c2 <GPIO_Init+0x42a>
		// configure alternate fun registers
		uint8_t temp1,temp2 = 0;
 800075a:	2300      	movs	r3, #0
 800075c:	727b      	strb	r3, [r7, #9]
		temp1 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8);
 800075e:	687b      	ldr	r3, [r7, #4]
 8000760:	791b      	ldrb	r3, [r3, #4]
 8000762:	08db      	lsrs	r3, r3, #3
 8000764:	723b      	strb	r3, [r7, #8]
		temp2 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8);
 8000766:	687b      	ldr	r3, [r7, #4]
 8000768:	791b      	ldrb	r3, [r3, #4]
 800076a:	f003 0307 	and.w	r3, r3, #7
 800076e:	727b      	strb	r3, [r7, #9]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(15<<(4* temp2));  // clearing the bit positions
 8000770:	687b      	ldr	r3, [r7, #4]
 8000772:	681b      	ldr	r3, [r3, #0]
 8000774:	7a3a      	ldrb	r2, [r7, #8]
 8000776:	3208      	adds	r2, #8
 8000778:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800077c:	7a7b      	ldrb	r3, [r7, #9]
 800077e:	009b      	lsls	r3, r3, #2
 8000780:	220f      	movs	r2, #15
 8000782:	fa02 f303 	lsl.w	r3, r2, r3
 8000786:	43db      	mvns	r3, r3
 8000788:	4618      	mov	r0, r3
 800078a:	687b      	ldr	r3, [r7, #4]
 800078c:	681b      	ldr	r3, [r3, #0]
 800078e:	7a3a      	ldrb	r2, [r7, #8]
 8000790:	4001      	ands	r1, r0
 8000792:	3208      	adds	r2, #8
 8000794:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

		pGPIOHandle->pGPIOx->AFR[temp1] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2);
 8000798:	687b      	ldr	r3, [r7, #4]
 800079a:	681b      	ldr	r3, [r3, #0]
 800079c:	7a3a      	ldrb	r2, [r7, #8]
 800079e:	3208      	adds	r2, #8
 80007a0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80007a4:	687b      	ldr	r3, [r7, #4]
 80007a6:	7a5b      	ldrb	r3, [r3, #9]
 80007a8:	461a      	mov	r2, r3
 80007aa:	7a7b      	ldrb	r3, [r7, #9]
 80007ac:	009b      	lsls	r3, r3, #2
 80007ae:	fa02 f303 	lsl.w	r3, r2, r3
 80007b2:	4618      	mov	r0, r3
 80007b4:	687b      	ldr	r3, [r7, #4]
 80007b6:	681b      	ldr	r3, [r3, #0]
 80007b8:	7a3a      	ldrb	r2, [r7, #8]
 80007ba:	4301      	orrs	r1, r0
 80007bc:	3208      	adds	r2, #8
 80007be:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

	}

}
 80007c2:	bf00      	nop
 80007c4:	3714      	adds	r7, #20
 80007c6:	46bd      	mov	sp, r7
 80007c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007cc:	4770      	bx	lr
 80007ce:	bf00      	nop
 80007d0:	40022000 	.word	0x40022000
 80007d4:	40013800 	.word	0x40013800
 80007d8:	40013c00 	.word	0x40013c00

080007dc <GPIO_ReadFromInputPin>:
 *
 * @return : 0 or 1
 *
 * @Note:
 **********************************************************************************************************/
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber) {
 80007dc:	b480      	push	{r7}
 80007de:	b083      	sub	sp, #12
 80007e0:	af00      	add	r7, sp, #0
 80007e2:	6078      	str	r0, [r7, #4]
 80007e4:	460b      	mov	r3, r1
 80007e6:	70fb      	strb	r3, [r7, #3]


	return (pGPIOx->IDR >> PinNumber) & 0x01;
 80007e8:	687b      	ldr	r3, [r7, #4]
 80007ea:	691a      	ldr	r2, [r3, #16]
 80007ec:	78fb      	ldrb	r3, [r7, #3]
 80007ee:	fa22 f303 	lsr.w	r3, r2, r3
 80007f2:	b2db      	uxtb	r3, r3
 80007f4:	f003 0301 	and.w	r3, r3, #1
 80007f8:	b2db      	uxtb	r3, r3

}
 80007fa:	4618      	mov	r0, r3
 80007fc:	370c      	adds	r7, #12
 80007fe:	46bd      	mov	sp, r7
 8000800:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000804:	4770      	bx	lr

08000806 <GPIO_WriteToOutputPin>:
 * @return :
 *
 * @Note:
 **********************************************************************************************************/
void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber,
		uint8_t value) {
 8000806:	b480      	push	{r7}
 8000808:	b083      	sub	sp, #12
 800080a:	af00      	add	r7, sp, #0
 800080c:	6078      	str	r0, [r7, #4]
 800080e:	460b      	mov	r3, r1
 8000810:	70fb      	strb	r3, [r7, #3]
 8000812:	4613      	mov	r3, r2
 8000814:	70bb      	strb	r3, [r7, #2]
	if (value == GPIO_PIN_SET){
 8000816:	78bb      	ldrb	r3, [r7, #2]
 8000818:	2b01      	cmp	r3, #1
 800081a:	d109      	bne.n	8000830 <GPIO_WriteToOutputPin+0x2a>
		pGPIOx->ODR |= (1 << PinNumber) ;
 800081c:	687b      	ldr	r3, [r7, #4]
 800081e:	695b      	ldr	r3, [r3, #20]
 8000820:	78fa      	ldrb	r2, [r7, #3]
 8000822:	2101      	movs	r1, #1
 8000824:	fa01 f202 	lsl.w	r2, r1, r2
 8000828:	431a      	orrs	r2, r3
 800082a:	687b      	ldr	r3, [r7, #4]
 800082c:	615a      	str	r2, [r3, #20]
	else{
		pGPIOx->ODR &= ~(1 << PinNumber) ;
	}


}
 800082e:	e009      	b.n	8000844 <GPIO_WriteToOutputPin+0x3e>
		pGPIOx->ODR &= ~(1 << PinNumber) ;
 8000830:	687b      	ldr	r3, [r7, #4]
 8000832:	695b      	ldr	r3, [r3, #20]
 8000834:	78fa      	ldrb	r2, [r7, #3]
 8000836:	2101      	movs	r1, #1
 8000838:	fa01 f202 	lsl.w	r2, r1, r2
 800083c:	43d2      	mvns	r2, r2
 800083e:	401a      	ands	r2, r3
 8000840:	687b      	ldr	r3, [r7, #4]
 8000842:	615a      	str	r2, [r3, #20]
}
 8000844:	bf00      	nop
 8000846:	370c      	adds	r7, #12
 8000848:	46bd      	mov	sp, r7
 800084a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800084e:	4770      	bx	lr

08000850 <main>:
}



int main(void)
{
 8000850:	b580      	push	{r7, lr}
 8000852:	b086      	sub	sp, #24
 8000854:	af00      	add	r7, sp, #0
	GPIO_Handle_t GPIOLed;
	GPIOLed.pGPIOx = GPIOD;
 8000856:	4b1d      	ldr	r3, [pc, #116]	; (80008cc <main+0x7c>)
 8000858:	60fb      	str	r3, [r7, #12]
	GPIOLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 800085a:	230c      	movs	r3, #12
 800085c:	743b      	strb	r3, [r7, #16]
	GPIOLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800085e:	2301      	movs	r3, #1
 8000860:	747b      	strb	r3, [r7, #17]
	GPIOLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_OP_HIGH_SPEED;
 8000862:	2302      	movs	r3, #2
 8000864:	74bb      	strb	r3, [r7, #18]
	GPIOLed.GPIO_PinConfig.GPIO_PinOType = GPIO_OP_TYPE_PP;
 8000866:	2300      	movs	r3, #0
 8000868:	753b      	strb	r3, [r7, #20]
	GPIOLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800086a:	2300      	movs	r3, #0
 800086c:	74fb      	strb	r3, [r7, #19]

	GPIO_Handle_t GPIOBtn;
	GPIOBtn.pGPIOx = GPIOA;
 800086e:	4b18      	ldr	r3, [pc, #96]	; (80008d0 <main+0x80>)
 8000870:	603b      	str	r3, [r7, #0]
	GPIOBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 8000872:	2300      	movs	r3, #0
 8000874:	713b      	strb	r3, [r7, #4]
	GPIOBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 8000876:	2300      	movs	r3, #0
 8000878:	717b      	strb	r3, [r7, #5]
	GPIOBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_OP_HIGH_SPEED;
 800087a:	2302      	movs	r3, #2
 800087c:	71bb      	strb	r3, [r7, #6]
	//GPIOLed.GPIO_PinConfig.GPIO_PinOType = GPIO_OP_TYPE_PP;
	GPIOBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800087e:	2300      	movs	r3, #0
 8000880:	71fb      	strb	r3, [r7, #7]

	GPIO_ClockControl(GPIOD , ENABLE);
 8000882:	2101      	movs	r1, #1
 8000884:	4811      	ldr	r0, [pc, #68]	; (80008cc <main+0x7c>)
 8000886:	f7ff fc9f 	bl	80001c8 <GPIO_ClockControl>
	GPIO_ClockControl(GPIOA , ENABLE);
 800088a:	2101      	movs	r1, #1
 800088c:	4810      	ldr	r0, [pc, #64]	; (80008d0 <main+0x80>)
 800088e:	f7ff fc9b 	bl	80001c8 <GPIO_ClockControl>
	GPIO_Init(&GPIOLed);
 8000892:	f107 030c 	add.w	r3, r7, #12
 8000896:	4618      	mov	r0, r3
 8000898:	f7ff fd7e 	bl	8000398 <GPIO_Init>
	GPIO_Init(&GPIOBtn);
 800089c:	463b      	mov	r3, r7
 800089e:	4618      	mov	r0, r3
 80008a0:	f7ff fd7a 	bl	8000398 <GPIO_Init>
    /* Loop forever */
	for(;;){
		if (GPIO_ReadFromInputPin(GPIOA, 0)== GPIO_PIN_SET){
 80008a4:	2100      	movs	r1, #0
 80008a6:	480a      	ldr	r0, [pc, #40]	; (80008d0 <main+0x80>)
 80008a8:	f7ff ff98 	bl	80007dc <GPIO_ReadFromInputPin>
 80008ac:	4603      	mov	r3, r0
 80008ae:	2b01      	cmp	r3, #1
 80008b0:	d105      	bne.n	80008be <main+0x6e>
		GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_12, GPIO_PIN_SET);
 80008b2:	2201      	movs	r2, #1
 80008b4:	210c      	movs	r1, #12
 80008b6:	4805      	ldr	r0, [pc, #20]	; (80008cc <main+0x7c>)
 80008b8:	f7ff ffa5 	bl	8000806 <GPIO_WriteToOutputPin>
 80008bc:	e7f2      	b.n	80008a4 <main+0x54>

		}
		else{
			GPIO_WriteToOutputPin(GPIOD, GPIO_PIN_NO_12, GPIO_PIN_RESET);
 80008be:	2200      	movs	r2, #0
 80008c0:	210c      	movs	r1, #12
 80008c2:	4802      	ldr	r0, [pc, #8]	; (80008cc <main+0x7c>)
 80008c4:	f7ff ff9f 	bl	8000806 <GPIO_WriteToOutputPin>
		if (GPIO_ReadFromInputPin(GPIOA, 0)== GPIO_PIN_SET){
 80008c8:	e7ec      	b.n	80008a4 <main+0x54>
 80008ca:	bf00      	nop
 80008cc:	40020c00 	.word	0x40020c00
 80008d0:	40020000 	.word	0x40020000

080008d4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80008d4:	480d      	ldr	r0, [pc, #52]	; (800090c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80008d6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80008d8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80008dc:	480c      	ldr	r0, [pc, #48]	; (8000910 <LoopForever+0x6>)
  ldr r1, =_edata
 80008de:	490d      	ldr	r1, [pc, #52]	; (8000914 <LoopForever+0xa>)
  ldr r2, =_sidata
 80008e0:	4a0d      	ldr	r2, [pc, #52]	; (8000918 <LoopForever+0xe>)
  movs r3, #0
 80008e2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80008e4:	e002      	b.n	80008ec <LoopCopyDataInit>

080008e6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80008e6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80008e8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80008ea:	3304      	adds	r3, #4

080008ec <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80008ec:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80008ee:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80008f0:	d3f9      	bcc.n	80008e6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80008f2:	4a0a      	ldr	r2, [pc, #40]	; (800091c <LoopForever+0x12>)
  ldr r4, =_ebss
 80008f4:	4c0a      	ldr	r4, [pc, #40]	; (8000920 <LoopForever+0x16>)
  movs r3, #0
 80008f6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80008f8:	e001      	b.n	80008fe <LoopFillZerobss>

080008fa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80008fa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80008fc:	3204      	adds	r2, #4

080008fe <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80008fe:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000900:	d3fb      	bcc.n	80008fa <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000902:	f000 f811 	bl	8000928 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000906:	f7ff ffa3 	bl	8000850 <main>

0800090a <LoopForever>:

LoopForever:
  b LoopForever
 800090a:	e7fe      	b.n	800090a <LoopForever>
  ldr   r0, =_estack
 800090c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000910:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000914:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000918:	08000990 	.word	0x08000990
  ldr r2, =_sbss
 800091c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000920:	2000001c 	.word	0x2000001c

08000924 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000924:	e7fe      	b.n	8000924 <ADC_IRQHandler>
	...

08000928 <__libc_init_array>:
 8000928:	b570      	push	{r4, r5, r6, lr}
 800092a:	4d0d      	ldr	r5, [pc, #52]	; (8000960 <__libc_init_array+0x38>)
 800092c:	4c0d      	ldr	r4, [pc, #52]	; (8000964 <__libc_init_array+0x3c>)
 800092e:	1b64      	subs	r4, r4, r5
 8000930:	10a4      	asrs	r4, r4, #2
 8000932:	2600      	movs	r6, #0
 8000934:	42a6      	cmp	r6, r4
 8000936:	d109      	bne.n	800094c <__libc_init_array+0x24>
 8000938:	4d0b      	ldr	r5, [pc, #44]	; (8000968 <__libc_init_array+0x40>)
 800093a:	4c0c      	ldr	r4, [pc, #48]	; (800096c <__libc_init_array+0x44>)
 800093c:	f000 f818 	bl	8000970 <_init>
 8000940:	1b64      	subs	r4, r4, r5
 8000942:	10a4      	asrs	r4, r4, #2
 8000944:	2600      	movs	r6, #0
 8000946:	42a6      	cmp	r6, r4
 8000948:	d105      	bne.n	8000956 <__libc_init_array+0x2e>
 800094a:	bd70      	pop	{r4, r5, r6, pc}
 800094c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000950:	4798      	blx	r3
 8000952:	3601      	adds	r6, #1
 8000954:	e7ee      	b.n	8000934 <__libc_init_array+0xc>
 8000956:	f855 3b04 	ldr.w	r3, [r5], #4
 800095a:	4798      	blx	r3
 800095c:	3601      	adds	r6, #1
 800095e:	e7f2      	b.n	8000946 <__libc_init_array+0x1e>
 8000960:	08000988 	.word	0x08000988
 8000964:	08000988 	.word	0x08000988
 8000968:	08000988 	.word	0x08000988
 800096c:	0800098c 	.word	0x0800098c

08000970 <_init>:
 8000970:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000972:	bf00      	nop
 8000974:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000976:	bc08      	pop	{r3}
 8000978:	469e      	mov	lr, r3
 800097a:	4770      	bx	lr

0800097c <_fini>:
 800097c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800097e:	bf00      	nop
 8000980:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000982:	bc08      	pop	{r3}
 8000984:	469e      	mov	lr, r3
 8000986:	4770      	bx	lr
